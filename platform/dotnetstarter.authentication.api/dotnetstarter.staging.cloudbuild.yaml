# Builds the project, deploys to a GCP Cloud Run container


steps:

#For debugging purposes (so we can see the cloudbuild directory structure execute ls)
- name: 'ubuntu'
  args: ['ls']

#For debugging purposes (so we can see the cloudbuild directory structure execute pwd)
- name: 'ubuntu'
  args: ['pwd']

  # .NET Core 2.0 by default restores before any build, so we can
# combine the restore and publish operations in a single statement.
- name: 'microsoft/dotnet:2.2-sdk'
  entrypoint: dotnet
  args: [ 'publish', '-c', 'Release' ]
  dir: 'platform/dotnetstarter.authentication.api' #cloudbuild is not directory aware by default, we need to specify each commands exec directory

# Run unit tests
#- name: 'gcr.io/cloud-builders/dotnet'
#  args: [ 'test']
#  dir: 'examples/CloudRunUnitTestsExample/CloudRunUnitTestsExampleTests' #cloudbuild is not directory aware by default, we need to specify each commands exec directory

# Build the app image from the Dockerfile configuration - the Dockerfile is copied to the build output directory
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/dotnetstarter.authentication.api', '.', '--build-arg', 'TENANTNAME=EXAMPLE', '--build-arg', 'ASPNETCORE_ENV=Staging', '--build-arg', 'GCP_APP_CREDENTIALS=example.json' ]
  dir: 'platform/dotnetstarter.authentication.api/bin/Release/netcoreapp2.2/publish' #cloudbuild is not directory aware by default, we need to specify each commands exec directory

 # push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/dotnetstarter.authentication.api']
  dir: 'platform/dotnetstarter.authentication.api/bin/Release/netcoreapp2.2/publish' #cloudbuild is not directory aware by default, we need to specify each commands exec directory

  # Call gcloud beta run deploy to deploy the image to a container in cloud run
- name: "gcr.io/cloud-builders/gcloud"
  args: ["beta", "run", "deploy", "dotnetstarter-authentication-api", "--image", "gcr.io/$PROJECT_ID/dotnetstarter.authentication.api", "--region", "us-central1", "--allow-unauthenticated", "--platform", "managed"]
timeout: "1600s"

# Publish the app.
images: [ 'gcr.io/$PROJECT_ID/dotnetstarter.authentication.api' ]
